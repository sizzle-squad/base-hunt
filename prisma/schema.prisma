generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model webhook_data {
  transaction_hash    String   @db.VarChar
  created_at          DateTime @default(now()) @db.Timestamptz(6)
  network_id          String   @db.VarChar
  block_hash          String?
  block_timestamp     String?  @db.VarChar
  event_type          String?  @db.VarChar
  from_address        String?  @db.VarChar
  to_address          String?  @db.VarChar
  value               String?  @db.VarChar
  contract_address    String?  @db.VarChar
  log_index           String?  @default("") @db.VarChar
  is_from_address_cbw Boolean? @default(false)
  is_to_address_cbw   Boolean? @default(false)
  id                  BigInt   @id @default(autoincrement())

  @@unique([transaction_hash, network_id], map: "transaction_hash_network_id")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model badge_configuration {
  id               BigInt          @id @default(autoincrement())
  name             String          @db.VarChar
  contract_address String          @db.VarChar
  token_id         BigInt
  level            Int?
  points           Int             @default(1)
  minter           String
  image_url        String?
  game_id          BigInt          @default(0)
  cta_url          String?
  cta_text         String?
  type             badge_type      @default(irl)
  claimed_boost    claimed_boost[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model score {
  id            BigInt   @id @default(autoincrement())
  game_id       BigInt
  user_address  String
  current_score BigInt   @default(0)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model level_configuration {
  id               BigInt   @id @default(autoincrement())
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  game_id          BigInt
  name             String
  threshold_points BigInt
  airdrop_command  String
  level            String?
}

model treasure_box_entries {
  id              BigInt   @id(map: "treasurebox_attacks_pkey") @default(autoincrement())
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  user_address    String
  total_hitpoints BigInt
  cbid            String?
  game_id         BigInt
  ens_name        String?
  tap_count       Int      @default(0)

  @@unique([user_address, game_id], map: "treasure_box_entries_unique")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model treasure_box_configuration {
  id              BigInt   @id(map: "treasurebox_configuration_pkey") @default(autoincrement())
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  total_hitpoints BigInt
  game_id         BigInt
  name            String
  location        String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model treasure_box_state {
  id                BigInt   @id @default(autoincrement())
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  current_hitpoints BigInt
  is_open           Boolean  @default(false)
  game_id           BigInt?  @unique(map: "treasure_box_state_unique")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model boost_configuration {
  id                 BigInt          @id @default(autoincrement())
  name               String          @db.VarChar
  contract_addresses String[]        @db.VarChar
  refresh_time       DateTime?       @db.Time(6)
  image_url          String?         @db.VarChar
  game_id            BigInt          @default(0)
  cta_url            String?         @db.VarChar
  cta_text           String?         @db.VarChar
  boost_type         boost_type      @default(NFT)
  claimed_boost      claimed_boost[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model claimed_boost {
  id                  BigInt              @id @default(autoincrement())
  updated_at          DateTime            @default(now()) @db.Timestamptz(6)
  user_address        String              @db.VarChar
  boost_id            BigInt
  game_id             BigInt
  boost_configuration boost_configuration @relation(fields: [boost_id], references: [id], onDelete: Cascade)

  @@unique([user_address, boost_id, game_id], map: "claimed_boost_unique")
}

enum badge_type {
  online
  irl
  level
}

enum boost_type {
  NFT
  NFT_PER_MINT
  TOKEN
  RECURRING
}
