create table "public"."badge_configuration" (
    "id" bigint generated by default as identity not null,
    "name" character varying,
    "game_id" bigint
);


alter table "public"."badge_configuration" enable row level security;

create table "public"."user_badges" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_address" text,
    "badge_id" bigint,
    "game_id" bigint
);


alter table "public"."user_badges" enable row level security;

create table "public"."user_referrals" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "referral_id" uuid not null default gen_random_uuid(),
    "user_address" text not null,
    "completed_referrals" text default '[]'::text
);


alter table "public"."user_referrals" enable row level security;

alter table "public"."challenge_configuration" drop column "is_enabled";

alter table "public"."challenge_configuration" add column "badge_id" bigint;

CREATE UNIQUE INDEX badge_configuration_pkey ON public.badge_configuration USING btree (id);

CREATE UNIQUE INDEX user_address_opt_in_user_address_key ON public.user_address_opt_in USING btree (user_address);

CREATE UNIQUE INDEX user_badges_pkey ON public.user_badges USING btree (id);

CREATE UNIQUE INDEX user_badges_user_address_badge_id_game_id_idx ON public.user_badges USING btree (user_address, badge_id, game_id);

CREATE UNIQUE INDEX user_referrals_pkey ON public.user_referrals USING btree (id);

CREATE UNIQUE INDEX user_referrals_user_address_key ON public.user_referrals USING btree (user_address);

alter table "public"."badge_configuration" add constraint "badge_configuration_pkey" PRIMARY KEY using index "badge_configuration_pkey";

alter table "public"."user_badges" add constraint "user_badges_pkey" PRIMARY KEY using index "user_badges_pkey";

alter table "public"."user_referrals" add constraint "user_referrals_pkey" PRIMARY KEY using index "user_referrals_pkey";

alter table "public"."challenge_configuration" add constraint "challenge_configuration_badge_id_fkey" FOREIGN KEY (badge_id) REFERENCES badge_configuration(id) not valid;

alter table "public"."challenge_configuration" validate constraint "challenge_configuration_badge_id_fkey";

alter table "public"."user_address_opt_in" add constraint "user_address_opt_in_user_address_key" UNIQUE using index "user_address_opt_in_user_address_key";

alter table "public"."user_badges" add constraint "user_badges_badge_id_fkey" FOREIGN KEY (badge_id) REFERENCES badge_configuration(id) not valid;

alter table "public"."user_badges" validate constraint "user_badges_badge_id_fkey";

alter table "public"."user_referrals" add constraint "user_referrals_user_address_fkey" FOREIGN KEY (user_address) REFERENCES user_address_opt_in(user_address) not valid;

alter table "public"."user_referrals" validate constraint "user_referrals_user_address_fkey";

alter table "public"."user_referrals" add constraint "user_referrals_user_address_key" UNIQUE using index "user_referrals_user_address_key";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.getuserbadges(_game_id numeric, _user_address text)
 RETURNS jsonb
 LANGUAGE plpgsql
AS $function$DECLARE
   badge_info JSONB;
BEGIN
   SELECT jsonb_agg(jsonb_strip_nulls(to_jsonb(bc))) INTO badge_info
   FROM user_badges ub
   LEFT JOIN badge_configuration bc ON ub.badge_id = bc.id
   WHERE ub.user_address = _user_address AND ub.game_id = _game_id;

   RETURN badge_info;
END;$function$
;

grant delete on table "public"."badge_configuration" to "anon";

grant insert on table "public"."badge_configuration" to "anon";

grant references on table "public"."badge_configuration" to "anon";

grant select on table "public"."badge_configuration" to "anon";

grant trigger on table "public"."badge_configuration" to "anon";

grant truncate on table "public"."badge_configuration" to "anon";

grant update on table "public"."badge_configuration" to "anon";

grant delete on table "public"."badge_configuration" to "authenticated";

grant insert on table "public"."badge_configuration" to "authenticated";

grant references on table "public"."badge_configuration" to "authenticated";

grant select on table "public"."badge_configuration" to "authenticated";

grant trigger on table "public"."badge_configuration" to "authenticated";

grant truncate on table "public"."badge_configuration" to "authenticated";

grant update on table "public"."badge_configuration" to "authenticated";

grant delete on table "public"."badge_configuration" to "service_role";

grant insert on table "public"."badge_configuration" to "service_role";

grant references on table "public"."badge_configuration" to "service_role";

grant select on table "public"."badge_configuration" to "service_role";

grant trigger on table "public"."badge_configuration" to "service_role";

grant truncate on table "public"."badge_configuration" to "service_role";

grant update on table "public"."badge_configuration" to "service_role";

grant delete on table "public"."user_badges" to "anon";

grant insert on table "public"."user_badges" to "anon";

grant references on table "public"."user_badges" to "anon";

grant select on table "public"."user_badges" to "anon";

grant trigger on table "public"."user_badges" to "anon";

grant truncate on table "public"."user_badges" to "anon";

grant update on table "public"."user_badges" to "anon";

grant delete on table "public"."user_badges" to "authenticated";

grant insert on table "public"."user_badges" to "authenticated";

grant references on table "public"."user_badges" to "authenticated";

grant select on table "public"."user_badges" to "authenticated";

grant trigger on table "public"."user_badges" to "authenticated";

grant truncate on table "public"."user_badges" to "authenticated";

grant update on table "public"."user_badges" to "authenticated";

grant delete on table "public"."user_badges" to "service_role";

grant insert on table "public"."user_badges" to "service_role";

grant references on table "public"."user_badges" to "service_role";

grant select on table "public"."user_badges" to "service_role";

grant trigger on table "public"."user_badges" to "service_role";

grant truncate on table "public"."user_badges" to "service_role";

grant update on table "public"."user_badges" to "service_role";

grant delete on table "public"."user_referrals" to "anon";

grant insert on table "public"."user_referrals" to "anon";

grant references on table "public"."user_referrals" to "anon";

grant select on table "public"."user_referrals" to "anon";

grant trigger on table "public"."user_referrals" to "anon";

grant truncate on table "public"."user_referrals" to "anon";

grant update on table "public"."user_referrals" to "anon";

grant delete on table "public"."user_referrals" to "authenticated";

grant insert on table "public"."user_referrals" to "authenticated";

grant references on table "public"."user_referrals" to "authenticated";

grant select on table "public"."user_referrals" to "authenticated";

grant trigger on table "public"."user_referrals" to "authenticated";

grant truncate on table "public"."user_referrals" to "authenticated";

grant update on table "public"."user_referrals" to "authenticated";

grant delete on table "public"."user_referrals" to "service_role";

grant insert on table "public"."user_referrals" to "service_role";

grant references on table "public"."user_referrals" to "service_role";

grant select on table "public"."user_referrals" to "service_role";

grant trigger on table "public"."user_referrals" to "service_role";

grant truncate on table "public"."user_referrals" to "service_role";

grant update on table "public"."user_referrals" to "service_role";


